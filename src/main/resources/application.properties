spring.application.name=inventory-information
server.port=8081 

# DataSource settings
spring.datasource.url=jdbc:postgresql://localhost:5432/inventory_information_v1
spring.datasource.username=azra_jasmin
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA settings
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Hibernate settings
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Connection pool settings (optional)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
spring.liquibase.enabled=false

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory-consumer-group
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.database=0
spring.redis.timeout=60000

# Optional Redis connection pool settings
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.pool.max-wait=-1ms

services.product.base-url=http://product-service:8080/api/v1


spring.profiles.active=security-disabled

# Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/inventory-realm
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# Logging for Security
logging.level.org.springframework.security=INFO
logging.level.org.keycloak=INFO

# Optional: Custom properties for Keycloak client information
app.keycloak.client-id=inventory-service-client
app.keycloak.client-secret=your-super-secret-key-here

# Custom Security Properties
app.security.allowed-origins=http://localhost:3000
app.security.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.security.allowed-headers=*
app.security.exposed-headers=Authorization
app.security.max-age=3600

